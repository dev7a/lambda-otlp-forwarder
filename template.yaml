AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Main stack for serverless-otlp-forwarder with configurable processor selection

Parameters:
  ProcessorType:
    Type: String
    AllowedValues: 
      - otlp-stdout
      - aws-spans
    Default: otlp-stdout
    Description: Type of processor to deploy. Only one can be active at a time.
  
  # Pass-through parameters
  CollectorsSecretsKeyPrefix:
    Type: String
    Description: The prefix for the secrets manager key for the collector.
    Default: 'serverless-otlp-forwarder/keys'
  CollectorsCacheTtlSeconds:
    Type: String
    Description: The TTL for the collector cache.
    Default: '300'
  RouteAllLogs:
    Type: String
    Default: 'yes'
    Description: 'Route all AWS logs to the Lambda function'

  # Demo parameters
  DeployDemo:
    Type: String
    Default: 'yes'
    Description: 'Deploy the demo application'
  DemoExporterProtocol:
    Type: String
    Default: 'http/protobuf'
  DemoExporterCompression:
    Type: String
    Default: 'gzip'

  # Benchmark parameters
  DeployBenchmark:
    Type: String
    Default: 'yes'
    Description: 'Deploy the benchmark stack for performance testing'

Conditions:
  IsOtlpStdoutProcessor: !Equals [!Ref ProcessorType, "otlp-stdout"]
  IsAwsSpansProcessor: !Equals [!Ref ProcessorType, "aws-spans"]
  DeployDemo: !Equals [!Ref DeployDemo, 'yes']
  DeployBenchmark: !Equals [!Ref DeployBenchmark, 'yes']

Resources:
  OtlpStdoutProcessor:
    Type: AWS::Serverless::Application
    Condition: IsOtlpStdoutProcessor
    Properties:
      Location: processors/otlp-stdout.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        CollectorsSecretsKeyPrefix: !Ref CollectorsSecretsKeyPrefix
        CollectorsCacheTtlSeconds: !Ref CollectorsCacheTtlSeconds
        RouteAllLogs: !Ref RouteAllLogs

  AwsSpansProcessor:
    Type: AWS::Serverless::Application
    Condition: IsAwsSpansProcessor
    Properties:
      Location: processors/aws-spans.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        CollectorsSecretsKeyPrefix: !Ref CollectorsSecretsKeyPrefix
        CollectorsCacheTtlSeconds: !Ref CollectorsCacheTtlSeconds

  DemoStack:
    Type: AWS::Serverless::Application
    Condition: DeployDemo
    Properties:
      Location: ./demo/template.yaml
      Parameters:
        NestedStackName: demo
        ExporterProtocol: !Ref DemoExporterProtocol
        ExporterCompression: !Ref DemoExporterCompression

  BenchmarkStack:
    Type: AWS::Serverless::Application
    Condition: DeployBenchmark
    Properties:
      Location: ./benchmark/template.yaml
      Parameters:
        StackName: !Ref AWS::StackName

Outputs:
  ActiveProcessorType:
    Description: The type of processor that is currently deployed
    Value: !Ref ProcessorType

  # OTLP Stdout Processor Outputs
  OtlpStdoutProcessorArn:
    Condition: IsOtlpStdoutProcessor
    Description: ARN of the OTLP stdout processor Lambda function
    Value: !GetAtt OtlpStdoutProcessor.Outputs.ProcessorArn
  
  OtlpStdoutProcessorName:
    Condition: IsOtlpStdoutProcessor
    Description: Name of the OTLP stdout processor Lambda function
    Value: !GetAtt OtlpStdoutProcessor.Outputs.ProcessorName

  # AWS spans Processor Outputs
  AwsSpansProcessorArn:
    Condition: IsAwsSpansProcessor
    Description: ARN of the span processor Lambda function
    Value: !GetAtt AwsSpansProcessor.Outputs.ProcessorArn
  
  AwsSpansProcessorName:
    Condition: IsAwsSpansProcessor
    Description: Name of the span processor Lambda function
    Value: !GetAtt AwsSpansProcessor.Outputs.ProcessorName

  # Demo Stack Outputs
  BackendUrl:
    Condition: DeployDemo
    Description: 'URL of the Backend API'
    Value: !GetAtt DemoStack.Outputs.BackendUrl
  FrontendUrl:
    Condition: DeployDemo
    Description: 'URL of the Frontend Lambda function'
    Value: !GetAtt DemoStack.Outputs.FrontendUrl
  HelloWorldUrl:
    Condition: DeployDemo
    Description: 'URL of the Hello World Lambda function'
    Value: !GetAtt DemoStack.Outputs.HelloWorldUrl

  # Benchmark Stack Outputs
  NodeStdoutFunction:
    Condition: DeployBenchmark
    Description: Node.js Manual OTLP Function ARN
    Value: !GetAtt BenchmarkStack.Outputs.NodeStdoutFunction
  NodeAdotFunction:
    Condition: DeployBenchmark
    Description: Node.js ADOT Function ARN
    Value: !GetAtt BenchmarkStack.Outputs.NodeAdotFunction
  NodeAppSignalsFunction:
    Condition: DeployBenchmark
    Description: Node.js AppSignals Function ARN
    Value: !GetAtt BenchmarkStack.Outputs.NodeAppSignalsFunction
  PythonStdoutFunction:
    Condition: DeployBenchmark
    Description: Python Manual OTLP Function ARN
    Value: !GetAtt BenchmarkStack.Outputs.PythonStdoutFunction
  PythonAdotFunction:
    Condition: DeployBenchmark
    Description: Python ADOT Function ARN
    Value: !GetAtt BenchmarkStack.Outputs.PythonAdotFunction
  PythonAppSignalsFunction:
    Condition: DeployBenchmark
    Description: Python AppSignals Function ARN
    Value: !GetAtt BenchmarkStack.Outputs.PythonAppSignalsFunction
